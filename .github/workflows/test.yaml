name: Test

on:
  workflow_call:

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Unit & Integration Tests
    runs-on: [self-hosted, Linux, X64, validator]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Set up Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          cache: false
          go-version-file: go.mod

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4
        with:
          version: v3.15.4

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up frigate
        run: pip install frigate

      - name: Ensure Reviewable
        run: make check-diff
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Test
        run: |
          helm repo add validator https://validator-labs.github.io/validator
          helm repo update
          make test

      - name: Workaround for https://github.com/codecov/feedback/issues/263
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5
        with:
          file: ./cover.out
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  test-chart:
    name: Run Helm Chart Tests
    runs-on: [self-hosted, Linux, X64, validator]
    if: "!(contains(github.head_ref, 'release-please') || contains(github.ref, 'release-please'))"
    env:
      IMAGE_TAG: latest-dev
      IMAGE: quay.io/validator-labs/${{ github.event.repository.name }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4
        with:
          version: v3.15.4

      - uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --chart-dirs chart --target-branch ${{ github.event.repository.default_branch }})
          echo $changed
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          cd $GITHUB_WORKSPACE
          ctArgs=""
          if [ -f $GITHUB_WORKSPACE/lintconf.yaml ]; then
            ctArgs="--lint-conf $GITHUB_WORKSPACE/lintconf.yaml"
          fi
          ct lint --validate-maintainers=false --check-version-increment=false --chart-dirs chart --target-branch ${{ github.event.repository.default_branch }} $ctArgs

      - name: Set short SHA
        id: short-sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          cluster_name: ct-${{ steps.short-sha.outputs.sha }}

      - name: Build Docker Image
        if: steps.list-changed.outputs.changed == 'true'
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          target: production
          tags: |
            ${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          cache-from: type=gha,scope=${{ github.ref_name }}-${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
          cache-to: type=gha,scope=${{ github.ref_name }}-${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
          load: true

      - name: Load Docker Image into kind Cluster
        if: steps.list-changed.outputs.changed == 'true'
        run: kind load docker-image ${{ env.IMAGE }}:${{ env.IMAGE_TAG }} --name ct-${{ steps.short-sha.outputs.sha }}

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --chart-dirs chart --helm-extra-set-args "--set=controllerManager.manager.image.tag=${{ env.IMAGE_TAG }}" --target-branch ${{ github.event.repository.default_branch }}
